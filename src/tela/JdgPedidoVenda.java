/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela;

import DAO.ClienteDAO;
import DAO.FaturamentoItemDAO;
import DAO.MercadoriaDAO;
import entidade.Cidade;
import entidade.Cliente;
import entidade.Faturamento;
import entidade.FaturamentoItem;
import entidade.Mercadoria;
import java.awt.Color;
import java.awt.Dimension;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mileto
 */
public class JdgPedidoVenda extends javax.swing.JDialog {

    Cidade cid = new Cidade();
    Cliente cliente = new Cliente(cid);

    Mercadoria mercadoria;
    FaturamentoItem faturamentoItem;
    Faturamento faturamento = new Faturamento();
    int count = 1;
    ArrayList<FaturamentoItem> mercs ;

    /**
     * Creates new form JdgPedidoVenda
     */
    public JdgPedidoVenda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
//        initialize();
        mercadoria = new Mercadoria();
        faturamentoItem = new FaturamentoItem();
        mercs = new ArrayList<>();
        listarMercadorias();

        tffCpfCNPJ.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblReferencia = new javax.swing.JLabel();
        tfdReferencia = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        tfdDescricao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tffQuantidade = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        tffPrecoUnitario = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        tffValorTotal = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        tffDesconto = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        lblRetornoMercadoria = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tffTotalDesconto = new javax.swing.JFormattedTextField();
        tffTotalVenda = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        tfdRazaoSocial = new javax.swing.JTextField();
        tffCpfCNPJ = new javax.swing.JFormattedTextField();
        lblCpfCnpj = new javax.swing.JLabel();
        btnCliente = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfdId = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        lblRetornoCliente = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnConfirmar = new javax.swing.JButton();
        btnCancelarItem = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMercadorias = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EasyPDV - Pedido de Venda");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pedido de Venda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 0, 204))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mercadoria", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        lblReferencia.setText("Referência");

        tfdReferencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfdReferenciaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdReferenciaFocusLost(evt);
            }
        });
        tfdReferencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfdReferenciaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfdReferenciaKeyReleased(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Lupa3.png"))); // NOI18N
        jButton1.setMnemonic('r');
        jButton1.setText("Referência");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tfdDescricao.setEditable(false);

        jLabel2.setText("Descrição");

        tffQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##.##"))));
        tffQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tffQuantidadeFocusLost(evt);
            }
        });
        tffQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tffQuantidadeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tffQuantidadeKeyReleased(evt);
            }
        });

        jLabel3.setText("Quantidade");

        tffPrecoUnitario.setEditable(false);
        tffPrecoUnitario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jLabel4.setText("Preço Unitário");

        tffValorTotal.setEditable(false);
        tffValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jLabel6.setText("Valor total");

        tffDesconto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        tffDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tffDescontoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tffDescontoKeyReleased(evt);
            }
        });

        jLabel5.setText("Desconto $");

        lblRetornoMercadoria.setForeground(new java.awt.Color(255, 0, 0));

        jLabel1.setText("Total Desconto$");

        jLabel7.setText("Total Venda");

        tffTotalDesconto.setEditable(false);
        tffTotalDesconto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        tffTotalDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tffTotalDescontoKeyReleased(evt);
            }
        });

        tffTotalVenda.setEditable(false);
        tffTotalVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRetornoMercadoria, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tfdDescricao)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblReferencia)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(tfdReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1))
                                .addComponent(jLabel2)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(tffQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(tffPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(tffDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tffValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))))
                            .addGap(1, 1, 1)))
                    .addComponent(jLabel1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(tffTotalDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tffTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lblReferencia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfdReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(tfdDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tffQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tffPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tffDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tffValorTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tffTotalDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tffTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRetornoMercadoria, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        tfdRazaoSocial.setEditable(false);

        tffCpfCNPJ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tffCpfCNPJFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tffCpfCNPJFocusLost(evt);
            }
        });
        tffCpfCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tffCpfCNPJActionPerformed(evt);
            }
        });
        tffCpfCNPJ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tffCpfCNPJKeyReleased(evt);
            }
        });

        lblCpfCnpj.setText("CPF/CNPJ");

        btnCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Lupa3.png"))); // NOI18N
        btnCliente.setMnemonic('c');
        btnCliente.setText("Cliente");
        btnCliente.setActionCommand("C");
        btnCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteActionPerformed(evt);
            }
        });
        btnCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnClienteKeyPressed(evt);
            }
        });

        jLabel8.setText("Nome");

        jLabel9.setText("ID");

        tfdId.setEditable(false);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/more.png"))); // NOI18N
        jButton8.setMnemonic('n');
        jButton8.setText("Novo");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        lblRetornoCliente.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfdRazaoSocial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(tfdId, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tffCpfCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCpfCnpj)))
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCliente)
                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(lblRetornoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(tfdId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCpfCnpj)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tffCpfCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8)))
                        .addGap(5, 5, 5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfdRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRetornoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Icon_money.png"))); // NOI18N
        jButton3.setMnemonic('f');
        jButton3.setText("Finalizar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icon_Schutdown16.png"))); // NOI18N
        jButton4.setMnemonic('s');
        jButton4.setText("Sair");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/confirmar.png"))); // NOI18N
        btnConfirmar.setMnemonic('o');
        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconcancel3.png"))); // NOI18N
        btnCancelarItem.setText("Cancelar Item");
        btnCancelarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelarItem)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar)
                    .addComponent(btnCancelarItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(27, 27, 27)
                .addComponent(jButton4)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblMercadorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblMercadorias);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 843, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        mercadoria.setDescricao("");
        mercadoria.setId(0);
        mercadoria.setReferencia("");
        mercadoria.setAtivo('T');
        JdgListaMercadorias listaMercadoria = new JdgListaMercadorias(null, true, mercadoria);
        listaMercadoria.setVisible(true);

        faturamentoItem.setMercadoria(mercadoria);
        tfdReferencia.setText(faturamentoItem.getMercadoria().getReferencia());
        tfdDescricao.setText(mercadoria.getDescricao());
        faturamentoItem.setMercadoria(mercadoria);
        faturamentoItem.setId(count);
        faturamentoItem.setQuantidade(1.00);
        faturamentoItem.setDesconto(0.00);
        tffQuantidade.setText(String.valueOf(faturamentoItem.getQuantidade()));
        tffDesconto.setText(String.valueOf(faturamentoItem.getDesconto()));
        tffPrecoUnitario.setText(String.valueOf(faturamentoItem.getMercadoria().getPrecoVenda()));
        tffQuantidade.requestFocus();

//        cidade.setAtivo('T');
//        JdgListaCidade listaCidade = new JdgListaCidade(null, true, cidade);
//        listaCidade.setVisible(true);
//
//        tfdCidade.setText(cliente.getCidade().getDescricao());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    private void limparCampos() throws Exception {
        mercadoria.setId(0);
        mercadoria.setDescricao("");
        mercadoria.setPrecoVenda(0);
        mercadoria.setReferencia("");
        faturamentoItem.setDesconto(0.00);
        faturamentoItem.setMercadoria(mercadoria);
        faturamentoItem.setQuantidade(1.00);
        faturamentoItem.setValorTotal(0.00);
        tffQuantidade.setText(String.valueOf(faturamentoItem.getQuantidade()).replace(".", ","));
        tfdReferencia.setText(faturamentoItem.getMercadoria().getReferencia());
        tfdDescricao.setText(faturamentoItem.getMercadoria().getDescricao());
        tffDesconto.setText(String.valueOf(faturamentoItem.getDesconto()).replace(".", ","));
        tffPrecoUnitario.setText(String.valueOf(faturamentoItem.getMercadoria().getPrecoVenda()).replace(".", ","));
        tffValorTotal.setText(String.valueOf(faturamentoItem.getValorTotal()).replace(".", ","));

    }

    private void atualizarMercadoriasCanceladas() {
        try {
            //setar para tabela modelo de dados

            tblMercadorias.setModel(this.obterDadosCompletosCancelados());
            tblMercadorias.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblMercadorias.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblMercadorias.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblMercadorias.getColumnModel().getColumn(3).setPreferredWidth(0);
            tblMercadorias.getColumnModel().getColumn(4).setPreferredWidth(0);
            tblMercadorias.getColumnModel().getColumn(5).setPreferredWidth(0);
            tblMercadorias.getColumnModel().getColumn(6).setPreferredWidth(0);

        } catch (Exception ex) {
            Logger.getLogger(JdgListaFormaPagamento.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private DefaultTableModel obterDadosCompletosCancelados() throws Exception {
        DefaultTableModel dtm = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
//adiciona titulo para as colunas
//        MercadoriaDAO mercDAO = new MercadoriaDAO();

        dtm.addColumn("SEQUÊNCIA");
        dtm.addColumn("REFERÊNCIA");
        dtm.addColumn("DESCRIÇÃO");
        dtm.addColumn("QNT");
        dtm.addColumn("$UNITÁRIO");
        dtm.addColumn("$DESCONTO");
        dtm.addColumn("$TOTAL");

        // mercs.add(faturamentoItem);
        for (int i = 1; i < mercs.size(); i++) {
            //popular tabela
            System.out.println("decrição.. " + mercs.get(i).getMercadoria().getDescricao());

            System.out.println(mercs.get(i).getValorTotal());
            dtm.addRow(new String[]{String.valueOf(mercs.get(i).getId()),
                mercs.get(i).getMercadoria().getReferencia(),
                mercs.get(i).getMercadoria().getDescricao(),
                String.valueOf(mercs.get(i).getQuantidade()),
                String.valueOf(mercs.get(i).getMercadoria().getPrecoVenda()),
                String.valueOf(mercs.get(i).getDesconto()),
                String.valueOf(mercs.get(i).getValorTotal())});

        }

        mercadoria = new Mercadoria();
        faturamentoItem = new FaturamentoItem();

//retorna o modelo
        return dtm;
    }

    private void listarMercadorias() {
        try {
            //setar para tabela modelo de dados

            tblMercadorias.setModel(this.obterDadosParaTabelaCompleto());
            tblMercadorias.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblMercadorias.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblMercadorias.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblMercadorias.getColumnModel().getColumn(3).setPreferredWidth(0);
            tblMercadorias.getColumnModel().getColumn(4).setPreferredWidth(0);
            tblMercadorias.getColumnModel().getColumn(5).setPreferredWidth(0);
            tblMercadorias.getColumnModel().getColumn(6).setPreferredWidth(0);

        } catch (Exception ex) {
            Logger.getLogger(JdgListaFormaPagamento.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private DefaultTableModel obterDadosParaTabelaCompleto() throws Exception {
        DefaultTableModel dtm = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
//adiciona titulo para as colunas
//        MercadoriaDAO mercDAO = new MercadoriaDAO();

        dtm.addColumn("SEQUÊNCIA");
        dtm.addColumn("REFERÊNCIA");
        dtm.addColumn("DESCRIÇÃO");
        dtm.addColumn("QNT");
        dtm.addColumn("$UNITÁRIO");
        dtm.addColumn("$DESCONTO");
        dtm.addColumn("$TOTAL");

//        mercs.add(faturamentoItem);
       
            for (int i = 0; i < mercs.size(); i++) {
                //popular tabela

                System.out.println(mercs.get(i).getValorTotal());
                dtm.addRow(new String[]{String.valueOf(mercs.get(i).getId()),
                    mercs.get(i).getMercadoria().getReferencia(),
                    mercs.get(i).getMercadoria().getDescricao(),
                    String.valueOf(mercs.get(i).getQuantidade()),
                    String.valueOf(mercs.get(i).getMercadoria().getPrecoVenda()),
                    String.valueOf(mercs.get(i).getDesconto()),
                    String.valueOf(mercs.get(i).getValorTotal())});

            }

            count++;
        
//        mercadoria = new Mercadoria();
//        faturamentoItem = new FaturamentoItem();

//retorna o modelo
        return dtm;
    }
    private void btnClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteActionPerformed
        System.out.println("char ativo cliente... " + cliente.getAtivo());
        cliente.setId(0);
        cliente.setRazaoSocial("");
        cliente.setCpfCnpj("");
        cliente.setAtivo('T');
        JdgListaCliente listaCliente = new JdgListaCliente(null, true, cliente, cid);
        listaCliente.setVisible(true);
        tffCpfCNPJ.setText(cliente.getCpfCnpj());
        tfdId.setText(String.valueOf(cliente.getId()));
        tfdRazaoSocial.setText(cliente.getRazaoSocial());

        tfdReferencia.requestFocus();
    }//GEN-LAST:event_btnClienteActionPerformed

    private void btnClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnClienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            JOptionPane.showMessageDialog(null, "Pressionou F1!");
        }
    }//GEN-LAST:event_btnClienteKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tffCpfCNPJKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tffCpfCNPJKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            confirmarCPFCNPJCliente();

        }
    }//GEN-LAST:event_tffCpfCNPJKeyReleased
    private void confirmarCPFCNPJCliente() {
        if (verificarClienteCadastrado()) {
            lblCpfCnpj.setForeground(Color.black);
            tfdId.setText(String.valueOf(cliente.getId()));
            tfdRazaoSocial.setText(cliente.getRazaoSocial());
            lblRetornoCliente.setText("");
            tfdReferencia.requestFocus();
        } else {

            lblRetornoCliente.setText("Cliente não cadastrado");
            lblCpfCnpj.setForeground(Color.red);

        }
    }

    private boolean verificarClienteCadastrado() {
        boolean ok = false;
        ClienteDAO cliDAO = new ClienteDAO();
        cliente.setCpfCnpj(tffCpfCNPJ.getText());
        cliente.setAtivo('V');
        cliente.setId(0);
        ArrayList<Cliente> clientes = cliDAO.consultar(cliente);
        System.out.println("cpf cnpj..." + tffCpfCNPJ.getText());
        if (tffCpfCNPJ.getText().length() > 0) {
            System.out.println("entrou no if");
            if (clientes.size() > 0) {
                cliente.setId(clientes.get(0).getId());
                cliente.setRazaoSocial(clientes.get(0).getRazaoSocial());
                System.out.println(clientes.get(0).getCpfCnpj() + "...");
                if (cliente.getCpfCnpj().equals(clientes.get(0).getCpfCnpj())) {
                    System.out.println("true");
                    ok = true;
                } else {
                    System.out.println("false");
                    ok = false;
                }
            }
        } else {
            ok = true;
        }

        return ok;
    }
    private void tfdReferenciaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdReferenciaKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB) {
            confirmarReferenciaMercadoria();
//            faturamentoItem.setMercadoria(mercadoria);
            tffPrecoUnitario.setText(String.valueOf(mercadoria.getPrecoVenda()));
//            JOptionPane.showMessageDialog(rootPane, "preço unitario mercadoria "+faturamentoItem.getMercadoria().getPrecoVenda());

//            if (Double.parseDouble(tffQuantidade.getText().replace(",", ".")) > 0.00) {
//                faturamentoItem.setQuantidade(Double.parseDouble(tffQuantidade.getText().replace(",", ".")));

//                faturamentoItem.setValorTotal(faturamentoItem.getMercadoria().getPrecoVenda() * faturamentoItem.getQuantidade());
                tffValorTotal.setText(String.valueOf(faturamentoItem.getValorTotal()));
            }
//            if (Double.parseDouble(tffDesconto.getText().replace(",", ".")) < faturamentoItem.getValorTotal()) {
//                faturamentoItem.setDesconto(Double.parseDouble(tffDesconto.getText().replace(",", ".")));

                faturamentoItem.setDesconto(0.00);
//                faturamentoItem.setValorTotal(Double.parseDouble(tffValorTotal.getText()) - faturamentoItem.getDesconto());
//        double valorTotal = Double.parseDouble(tffPrecoUnitario.getText().replace(",", "."))*Double.parseDouble(tffQuantidade.getText());
                tffValorTotal.setText(String.valueOf(mercadoria.getPrecoVenda()));
                

//            }
            atualizarFaturamento();
//        }

    }//GEN-LAST:event_tfdReferenciaKeyReleased
    private void confirmarReferenciaMercadoria() {
        mercadoria = new Mercadoria();
        faturamentoItem = new FaturamentoItem();
        if (verificarMercadoriaCadastrada()) {

            lblReferencia.setForeground(Color.black);
            lblRetornoMercadoria.setText("");
            System.out.println("entrou no if da verificação...tem cadastrado");
            tfdDescricao.setText(mercadoria.getDescricao());
            
            faturamentoItem.setId(count);
//            faturamentoItem.setQuantidade(1.00);
            faturamentoItem.setDesconto(0.00);
            tffQuantidade.setText(String.valueOf(faturamentoItem.getQuantidade()).replace(".", ","));
            tffDesconto.setText(String.valueOf(faturamentoItem.getDesconto()).replace(".", ","));
            
//            tffPrecoUnitario.setText(String.valueOf(faturamentoItem.getMercadoria().getPrecoVenda()).replace(".", ","));

            tffQuantidade.requestFocus();
        } else {

            mercadoria.setReferencia("");
            lblRetornoMercadoria.setText("Mercadoria não localizada");
            lblReferencia.setForeground(Color.red);
        }
    }

    private boolean verificarMercadoriaCadastrada() {
        boolean ok = false;
        MercadoriaDAO mercDAO = new MercadoriaDAO();
        mercadoria.setReferencia(tfdReferencia.getText());
        mercadoria.setAtivo('V');
        ArrayList<Mercadoria> mercadorias = mercDAO.consultar(mercadoria);
//        mercadoria.setReferencia("");
        if (tfdReferencia.getText().length() > 0) {

            if (mercadorias.size() > 0) {
                mercadoria.setId(mercadorias.get(0).getId());
                mercadoria.setReferencia(mercadorias.get(0).getReferencia());
                mercadoria.setDescricao(mercadorias.get(0).getDescricao());
                mercadoria.setPrecoCusto(mercadorias.get(0).getPrecoCusto());
                mercadoria.setPrecoVenda(mercadorias.get(0).getPrecoVenda());
                System.out.println(mercadorias.get(0).getReferencia() + "...referencia do array posição 0");
                if (mercadorias.get(0).getReferencia().equals(tfdReferencia.getText())) {
                    System.out.println("true");
                    ok = true;
                } else {
                    System.out.println("false");
                    ok = false;
                }
            }
            mercadorias.add(mercadoria);
        } else {
            ok = true;
        }

        return ok;
    }
    private void tffQuantidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tffQuantidadeKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB) {
            quantidadeItem();

        }
    }//GEN-LAST:event_tffQuantidadeKeyReleased
    private void quantidadeItem() {
        if (Double.parseDouble(tffQuantidade.getText().replace(",", ".")) > 0.00) {
            
//            faturamentoItem.setValorTotal(faturamentoItem.getMercadoria().getPrecoVenda() * faturamentoItem.getQuantidade());
    
                
            faturamentoItem.setValorTotal(mercadoria.getPrecoVenda()*Double.parseDouble(tffQuantidade.getText().replace(",", ".")));
            tffValorTotal.setText(String.valueOf(faturamentoItem.getValorTotal()));
            tffDesconto.requestFocus();
        } else {
            tffQuantidade.requestFocus();
        }

    }
    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        try {
            acrescentarDesconto();
            confirmarItem();
        } catch (Exception ex) {
            Logger.getLogger(JdgPedidoVenda.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnConfirmarActionPerformed
    private void confirmarItem() throws Exception {
         faturamentoItem = new FaturamentoItem();
            faturamentoItem.setMercadoria(mercadoria);
            faturamentoItem.setQuantidade(Double.parseDouble(tffQuantidade.getText().replace(",", ".")));
            faturamentoItem.setValorTotal(Double.parseDouble(tffValorTotal.getText().replace(",", ".")));
            faturamentoItem.setDesconto(Double.parseDouble(tffDesconto.getText().replace(",", ".")));
            mercs.add(faturamentoItem);
            for (int i = 0; i < mercs.size(); i++) {
                System.out.println(mercs.size()+"size");
                System.out.println(mercs.get(i).getMercadoria().getReferencia()+".referencia... \n");
                System.out.println(mercs.get(i).getMercadoria().getDescricao()+".descricao... \n");
                
        }
            System.out.println("\n \n \n \n ------");
        listarMercadorias();
        try {
//            limparCampos();
        } catch (Exception ex) {
            Logger.getLogger(JdgPedidoVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        tfdReferencia.requestFocus();
    }
    
    

    private void tffDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tffDescontoKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB) {
            try {

                acrescentarDesconto();
                
            } catch (Exception ex) {
                Logger.getLogger(JdgPedidoVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tffDescontoKeyReleased
    private void acrescentarDesconto() throws Exception {
        
        if (Double.parseDouble(tffDesconto.getText().replace(",", ".")) < faturamentoItem.getValorTotal()) {
            
            
//            
//            faturamentoItem.setValorTotal(Double.parseDouble(tffValorTotal.getText()) - faturamentoItem.getDesconto());
//            tffValorTotal.setText(String.valueOf(faturamentoItem.getValorTotal()));
////            atualizarFaturamento();
//            faturamento.setDesconto(faturamento.getDesconto() + faturamentoItem.getDesconto());
//            faturamento.setValorTotal(faturamento.getValorTotal() - faturamentoItem.getDesconto());
//            tffTotalDesconto.setText(String.valueOf(faturamento.getDesconto()).replace(".", ","));
//            tffTotalVenda.setText(String.valueOf(faturamento.getValorTotal()).replace(".", ","));
            listarMercadorias();
//            limparCampos();
            tfdReferencia.requestFocus();
        }
    }

    private void atualizarFaturamento() {
        faturamento.setValorTotal(faturamento.getValorTotal() + faturamentoItem.getValorTotal());
        faturamento.setDesconto(faturamento.getDesconto() + faturamentoItem.getDesconto());
        tffTotalDesconto.setText(String.valueOf(faturamento.getDesconto()).replace(".", ","));
        tffTotalVenda.setText(String.valueOf(faturamento.getValorTotal()).replace(".", ","));
    }

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        tfdReferencia.requestFocus();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void tffCpfCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tffCpfCNPJActionPerformed

    }//GEN-LAST:event_tffCpfCNPJActionPerformed

    private void tfdReferenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdReferenciaFocusLost
        btnConfirmar.setEnabled(true);
    }//GEN-LAST:event_tfdReferenciaFocusLost

    private void tffCpfCNPJFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tffCpfCNPJFocusLost
        confirmarCPFCNPJCliente();
    }//GEN-LAST:event_tffCpfCNPJFocusLost

    private void tffQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tffQuantidadeFocusLost
//        quantidadeItem();
    }//GEN-LAST:event_tffQuantidadeFocusLost

    private void tffCpfCNPJFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tffCpfCNPJFocusGained
        tffCpfCNPJ.requestFocus();
    }//GEN-LAST:event_tffCpfCNPJFocusGained

    private void tffQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tffQuantidadeKeyPressed
        if (evt.getKeyCode() != KeyEvent.VK_ENTER && evt.getKeyCode() != KeyEvent.VK_TAB
                && tffQuantidade.getText().equals("1,0")) {
            tffQuantidade.setText("");
        }
    }//GEN-LAST:event_tffQuantidadeKeyPressed

    private void tfdReferenciaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdReferenciaFocusGained
        btnConfirmar.setEnabled(false);
//        faturamentoItem.setQuantidade(1.00);
        faturamentoItem.setDesconto(0.00);
        try {

//            limparCampos();
        } catch (Exception ex) {
            Logger.getLogger(JdgPedidoVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tfdReferenciaFocusGained

    private void tffTotalDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tffTotalDescontoKeyReleased

    }//GEN-LAST:event_tffTotalDescontoKeyReleased

    private void tffDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tffDescontoKeyPressed
        if (evt.getKeyCode() != KeyEvent.VK_ENTER && evt.getKeyCode() != KeyEvent.VK_TAB
                && tffDesconto.getText().equals("0,0")) {
            tffDesconto.setText("");
        }
    }//GEN-LAST:event_tffDescontoKeyPressed

    private void btnCancelarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarItemActionPerformed

        int op = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja cancelar a mercadora? \n"
                + "Referência: " + mercs.get(tblMercadorias.getSelectedRow() + 1).getMercadoria().getReferencia() + "\n"
                + "Descrição: " + mercs.get(tblMercadorias.getSelectedRow() + 1).getMercadoria().getDescricao());
        if (op == 0) {
            try {
                cancelarItem();
            } catch (Exception ex) {
                Logger.getLogger(JdgPedidoVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnCancelarItemActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        FaturamentoItemDAO fatItemDAO = new FaturamentoItemDAO();
        
        for (int i = 0; i < mercs.size(); i++) {
            System.out.println("referencia "+i+" "+mercs.get(i).getMercadoria().getReferencia());
            
        }
        
        fatItemDAO.consultar(faturamentoItem, mercs);
        System.out.println("id cliente = " + cliente.getId());
        faturamento.setCliente(cliente);
        faturamentoItem.setMercadoria(mercadoria);

        System.out.println("id cliente = " + faturamento.getCliente().getId());
        JdgFormaPagamento forPag = new JdgFormaPagamento(null, true, mercs, faturamento, faturamentoItem);
        forPag.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tfdReferenciaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdReferenciaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdReferenciaKeyPressed

    private void cancelarItem() throws Exception {

        //pega a linha selecionada
        int row = tblMercadorias.getSelectedRow();
        System.out.println("linha selecionada" + row);

        faturamento.setValorTotal(faturamento.getValorTotal() - mercs.get(row + 1).getValorTotal());
        faturamento.setDesconto(faturamento.getDesconto() - mercs.get(row + 1).getDesconto());
        tffTotalDesconto.setText(String.valueOf(faturamento.getDesconto()).replace(".", ","));
        tffTotalVenda.setText(String.valueOf(faturamento.getValorTotal()).replace(".", ","));
        faturamentoItem.setDesconto(0.00);
        faturamentoItem.setQuantidade(0.00);
        faturamentoItem.setValorTotal(0.00);
//        listarMercadorias();

        mercs.get(row + 1).setDesconto(0.00);
        mercs.get(row + 1).setValorTotal(0.00);
        mercs.get(row + 1).setQuantidade(0.00);
        mercs.get(row + 1).getMercadoria().setPrecoVenda(0.00);
        mercs.get(row + 1).getMercadoria().setDescricao(mercs.get(row + 1).getMercadoria().getDescricao() + " *** CANCELADO ***");
        System.out.println("tamanho array..." + mercs.size());

        atualizarMercadoriasCanceladas();

    }

    public String dataAtual() {
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        System.out.println(date);
        return dateFormat.format(date);
//        return dateFormat.format(Date.parse("2017-03-31 20:09:29".replace("-", "/")));

    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarItem;
    private javax.swing.JButton btnCliente;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCpfCnpj;
    private javax.swing.JLabel lblReferencia;
    private javax.swing.JLabel lblRetornoCliente;
    private javax.swing.JLabel lblRetornoMercadoria;
    private javax.swing.JTable tblMercadorias;
    private javax.swing.JTextField tfdDescricao;
    private javax.swing.JTextField tfdId;
    private javax.swing.JTextField tfdRazaoSocial;
    private javax.swing.JTextField tfdReferencia;
    private javax.swing.JFormattedTextField tffCpfCNPJ;
    private javax.swing.JFormattedTextField tffDesconto;
    private javax.swing.JFormattedTextField tffPrecoUnitario;
    private javax.swing.JFormattedTextField tffQuantidade;
    private javax.swing.JFormattedTextField tffTotalDesconto;
    private javax.swing.JFormattedTextField tffTotalVenda;
    private javax.swing.JFormattedTextField tffValorTotal;
    // End of variables declaration//GEN-END:variables
}
